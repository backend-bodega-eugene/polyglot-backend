// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xcore/transport/internet/config.proto

package com.xray.transport.internet;

/**
 * <pre>
 * SocketConfig is options to be applied on network sockets.
 * </pre>
 * <p>
 * Protobuf type {@code xray.transport.internet.SocketConfig}
 */
public final class SocketConfig extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:xray.transport.internet.SocketConfig)
        SocketConfigOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use SocketConfig.newBuilder() to construct.
    private SocketConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private SocketConfig() {
        tproxy_ = 0;
        bindAddress_ = com.google.protobuf.ByteString.EMPTY;
        domainStrategy_ = 0;
        dialerProxy_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
        return new SocketConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
        return this.unknownFields;
    }

    private SocketConfig(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
            boolean done = false;
            while (!done) {
                int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    case 8: {

                        mark_ = input.readInt32();
                        break;
                    }
                    case 16: {

                        tfo_ = input.readInt32();
                        break;
                    }
                    case 24: {
                        int rawValue = input.readEnum();

                        tproxy_ = rawValue;
                        break;
                    }
                    case 32: {

                        receiveOriginalDestAddress_ = input.readBool();
                        break;
                    }
                    case 42: {

                        bindAddress_ = input.readBytes();
                        break;
                    }
                    case 48: {

                        bindPort_ = input.readUInt32();
                        break;
                    }
                    case 56: {

                        acceptProxyProtocol_ = input.readBool();
                        break;
                    }
                    case 64: {
                        int rawValue = input.readEnum();

                        domainStrategy_ = rawValue;
                        break;
                    }
                    case 74: {
                        java.lang.String s = input.readStringRequireUtf8();

                        dialerProxy_ = s;
                        break;
                    }
                    case 80: {

                        tcpKeepAliveInterval_ = input.readInt32();
                        break;
                    }
                    default: {
                        if (!parseUnknownField(
                                input, unknownFields, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                }
            }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
        } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
        }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
        return com.xray.transport.internet.Config.internal_static_xray_transport_internet_SocketConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
        return com.xray.transport.internet.Config.internal_static_xray_transport_internet_SocketConfig_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.xray.transport.internet.SocketConfig.class, com.xray.transport.internet.SocketConfig.Builder.class);
    }

    /**
     * Protobuf enum {@code xray.transport.internet.SocketConfig.TProxyMode}
     */
    public enum TProxyMode
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * TProxy is off.
         * </pre>
         *
         * <code>Off = 0;</code>
         */
        Off(0),
        /**
         * <pre>
         * TProxy mode.
         * </pre>
         *
         * <code>TProxy = 1;</code>
         */
        TProxy(1),
        /**
         * <pre>
         * Redirect mode.
         * </pre>
         *
         * <code>Redirect = 2;</code>
         */
        Redirect(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * TProxy is off.
         * </pre>
         *
         * <code>Off = 0;</code>
         */
        public static final int Off_VALUE = 0;
        /**
         * <pre>
         * TProxy mode.
         * </pre>
         *
         * <code>TProxy = 1;</code>
         */
        public static final int TProxy_VALUE = 1;
        /**
         * <pre>
         * Redirect mode.
         * </pre>
         *
         * <code>Redirect = 2;</code>
         */
        public static final int Redirect_VALUE = 2;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new java.lang.IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TProxyMode valueOf(int value) {
            return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static TProxyMode forNumber(int value) {
            switch (value) {
                case 0:
                    return Off;
                case 1:
                    return TProxy;
                case 2:
                    return Redirect;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<TProxyMode>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<
                TProxyMode> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<TProxyMode>() {
                    public TProxyMode findValueByNumber(int number) {
                        return TProxyMode.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            if (this == UNRECOGNIZED) {
                throw new java.lang.IllegalStateException(
                        "Can't get the descriptor of an unrecognized enum value.");
            }
            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return com.xray.transport.internet.SocketConfig.getDescriptor().getEnumTypes().get(0);
        }

        private static final TProxyMode[] VALUES = values();

        public static TProxyMode valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private TProxyMode(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:xray.transport.internet.SocketConfig.TProxyMode)
    }

    public static final int MARK_FIELD_NUMBER = 1;
    private int mark_;

    /**
     * <pre>
     * Mark of the connection. If non-zero, the value will be set to SO_MARK.
     * </pre>
     *
     * <code>int32 mark = 1;</code>
     *
     * @return The mark.
     */
    @java.lang.Override
    public int getMark() {
        return mark_;
    }

    public static final int TFO_FIELD_NUMBER = 2;
    private int tfo_;

    /**
     * <pre>
     * TFO is the state of TFO settings.
     * </pre>
     *
     * <code>int32 tfo = 2;</code>
     *
     * @return The tfo.
     */
    @java.lang.Override
    public int getTfo() {
        return tfo_;
    }

    public static final int TPROXY_FIELD_NUMBER = 3;
    private int tproxy_;

    /**
     * <pre>
     * TProxy is for enabling TProxy socket option.
     * </pre>
     *
     * <code>.xray.transport.internet.SocketConfig.TProxyMode tproxy = 3;</code>
     *
     * @return The enum numeric value on the wire for tproxy.
     */
    @java.lang.Override
    public int getTproxyValue() {
        return tproxy_;
    }

    /**
     * <pre>
     * TProxy is for enabling TProxy socket option.
     * </pre>
     *
     * <code>.xray.transport.internet.SocketConfig.TProxyMode tproxy = 3;</code>
     *
     * @return The tproxy.
     */
    @java.lang.Override
    public com.xray.transport.internet.SocketConfig.TProxyMode getTproxy() {
        @SuppressWarnings("deprecation")
        com.xray.transport.internet.SocketConfig.TProxyMode result = com.xray.transport.internet.SocketConfig.TProxyMode.valueOf(tproxy_);
        return result == null ? com.xray.transport.internet.SocketConfig.TProxyMode.UNRECOGNIZED : result;
    }

    public static final int RECEIVE_ORIGINAL_DEST_ADDRESS_FIELD_NUMBER = 4;
    private boolean receiveOriginalDestAddress_;

    /**
     * <pre>
     * ReceiveOriginalDestAddress is for enabling IP_RECVORIGDSTADDR socket
     * option. This option is for UDP only.
     * </pre>
     *
     * <code>bool receive_original_dest_address = 4;</code>
     *
     * @return The receiveOriginalDestAddress.
     */
    @java.lang.Override
    public boolean getReceiveOriginalDestAddress() {
        return receiveOriginalDestAddress_;
    }

    public static final int BIND_ADDRESS_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString bindAddress_;

    /**
     * <code>bytes bind_address = 5;</code>
     *
     * @return The bindAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBindAddress() {
        return bindAddress_;
    }

    public static final int BIND_PORT_FIELD_NUMBER = 6;
    private int bindPort_;

    /**
     * <code>uint32 bind_port = 6;</code>
     *
     * @return The bindPort.
     */
    @java.lang.Override
    public int getBindPort() {
        return bindPort_;
    }

    public static final int ACCEPT_PROXY_PROTOCOL_FIELD_NUMBER = 7;
    private boolean acceptProxyProtocol_;

    /**
     * <code>bool accept_proxy_protocol = 7;</code>
     *
     * @return The acceptProxyProtocol.
     */
    @java.lang.Override
    public boolean getAcceptProxyProtocol() {
        return acceptProxyProtocol_;
    }

    public static final int DOMAIN_STRATEGY_FIELD_NUMBER = 8;
    private int domainStrategy_;

    /**
     * <code>.xray.transport.internet.DomainStrategy domain_strategy = 8;</code>
     *
     * @return The enum numeric value on the wire for domainStrategy.
     */
    @java.lang.Override
    public int getDomainStrategyValue() {
        return domainStrategy_;
    }

    /**
     * <code>.xray.transport.internet.DomainStrategy domain_strategy = 8;</code>
     *
     * @return The domainStrategy.
     */
    @java.lang.Override
    public com.xray.transport.internet.DomainStrategy getDomainStrategy() {
        @SuppressWarnings("deprecation")
        com.xray.transport.internet.DomainStrategy result = com.xray.transport.internet.DomainStrategy.valueOf(domainStrategy_);
        return result == null ? com.xray.transport.internet.DomainStrategy.UNRECOGNIZED : result;
    }

    public static final int DIALER_PROXY_FIELD_NUMBER = 9;
    private volatile java.lang.Object dialerProxy_;

    /**
     * <code>string dialer_proxy = 9;</code>
     *
     * @return The dialerProxy.
     */
    @java.lang.Override
    public java.lang.String getDialerProxy() {
        java.lang.Object ref = dialerProxy_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            dialerProxy_ = s;
            return s;
        }
    }

    /**
     * <code>string dialer_proxy = 9;</code>
     *
     * @return The bytes for dialerProxy.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
    getDialerProxyBytes() {
        java.lang.Object ref = dialerProxy_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b =
                    com.google.protobuf.ByteString.copyFromUtf8(
                            (java.lang.String) ref);
            dialerProxy_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int TCP_KEEP_ALIVE_INTERVAL_FIELD_NUMBER = 10;
    private int tcpKeepAliveInterval_;

    /**
     * <code>int32 tcp_keep_alive_interval = 10;</code>
     *
     * @return The tcpKeepAliveInterval.
     */
    @java.lang.Override
    public int getTcpKeepAliveInterval() {
        return tcpKeepAliveInterval_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (mark_ != 0) {
            output.writeInt32(1, mark_);
        }
        if (tfo_ != 0) {
            output.writeInt32(2, tfo_);
        }
        if (tproxy_ != com.xray.transport.internet.SocketConfig.TProxyMode.Off.getNumber()) {
            output.writeEnum(3, tproxy_);
        }
        if (receiveOriginalDestAddress_ != false) {
            output.writeBool(4, receiveOriginalDestAddress_);
        }
        if (!bindAddress_.isEmpty()) {
            output.writeBytes(5, bindAddress_);
        }
        if (bindPort_ != 0) {
            output.writeUInt32(6, bindPort_);
        }
        if (acceptProxyProtocol_ != false) {
            output.writeBool(7, acceptProxyProtocol_);
        }
        if (domainStrategy_ != com.xray.transport.internet.DomainStrategy.AS_IS.getNumber()) {
            output.writeEnum(8, domainStrategy_);
        }
        if (!getDialerProxyBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 9, dialerProxy_);
        }
        if (tcpKeepAliveInterval_ != 0) {
            output.writeInt32(10, tcpKeepAliveInterval_);
        }
        unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (mark_ != 0) {
            size += com.google.protobuf.CodedOutputStream
                    .computeInt32Size(1, mark_);
        }
        if (tfo_ != 0) {
            size += com.google.protobuf.CodedOutputStream
                    .computeInt32Size(2, tfo_);
        }
        if (tproxy_ != com.xray.transport.internet.SocketConfig.TProxyMode.Off.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
                    .computeEnumSize(3, tproxy_);
        }
        if (receiveOriginalDestAddress_ != false) {
            size += com.google.protobuf.CodedOutputStream
                    .computeBoolSize(4, receiveOriginalDestAddress_);
        }
        if (!bindAddress_.isEmpty()) {
            size += com.google.protobuf.CodedOutputStream
                    .computeBytesSize(5, bindAddress_);
        }
        if (bindPort_ != 0) {
            size += com.google.protobuf.CodedOutputStream
                    .computeUInt32Size(6, bindPort_);
        }
        if (acceptProxyProtocol_ != false) {
            size += com.google.protobuf.CodedOutputStream
                    .computeBoolSize(7, acceptProxyProtocol_);
        }
        if (domainStrategy_ != com.xray.transport.internet.DomainStrategy.AS_IS.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
                    .computeEnumSize(8, domainStrategy_);
        }
        if (!getDialerProxyBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, dialerProxy_);
        }
        if (tcpKeepAliveInterval_ != 0) {
            size += com.google.protobuf.CodedOutputStream
                    .computeInt32Size(10, tcpKeepAliveInterval_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof com.xray.transport.internet.SocketConfig)) {
            return super.equals(obj);
        }
        com.xray.transport.internet.SocketConfig other = (com.xray.transport.internet.SocketConfig) obj;

        if (getMark()
                != other.getMark()) return false;
        if (getTfo()
                != other.getTfo()) return false;
        if (tproxy_ != other.tproxy_) return false;
        if (getReceiveOriginalDestAddress()
                != other.getReceiveOriginalDestAddress()) return false;
        if (!getBindAddress()
                .equals(other.getBindAddress())) return false;
        if (getBindPort()
                != other.getBindPort()) return false;
        if (getAcceptProxyProtocol()
                != other.getAcceptProxyProtocol()) return false;
        if (domainStrategy_ != other.domainStrategy_) return false;
        if (!getDialerProxy()
                .equals(other.getDialerProxy())) return false;
        if (getTcpKeepAliveInterval()
                != other.getTcpKeepAliveInterval()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + MARK_FIELD_NUMBER;
        hash = (53 * hash) + getMark();
        hash = (37 * hash) + TFO_FIELD_NUMBER;
        hash = (53 * hash) + getTfo();
        hash = (37 * hash) + TPROXY_FIELD_NUMBER;
        hash = (53 * hash) + tproxy_;
        hash = (37 * hash) + RECEIVE_ORIGINAL_DEST_ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getReceiveOriginalDestAddress());
        hash = (37 * hash) + BIND_ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getBindAddress().hashCode();
        hash = (37 * hash) + BIND_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getBindPort();
        hash = (37 * hash) + ACCEPT_PROXY_PROTOCOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getAcceptProxyProtocol());
        hash = (37 * hash) + DOMAIN_STRATEGY_FIELD_NUMBER;
        hash = (53 * hash) + domainStrategy_;
        hash = (37 * hash) + DIALER_PROXY_FIELD_NUMBER;
        hash = (53 * hash) + getDialerProxy().hashCode();
        hash = (37 * hash) + TCP_KEEP_ALIVE_INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getTcpKeepAliveInterval();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static com.xray.transport.internet.SocketConfig parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.xray.transport.internet.SocketConfig parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.xray.transport.internet.SocketConfig parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.xray.transport.internet.SocketConfig parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.xray.transport.internet.SocketConfig parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.xray.transport.internet.SocketConfig parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.xray.transport.internet.SocketConfig parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static com.xray.transport.internet.SocketConfig parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.xray.transport.internet.SocketConfig parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.xray.transport.internet.SocketConfig parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.xray.transport.internet.SocketConfig parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static com.xray.transport.internet.SocketConfig parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.xray.transport.internet.SocketConfig prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * <pre>
     * SocketConfig is options to be applied on network sockets.
     * </pre>
     * <p>
     * Protobuf type {@code xray.transport.internet.SocketConfig}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:xray.transport.internet.SocketConfig)
            com.xray.transport.internet.SocketConfigOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.xray.transport.internet.Config.internal_static_xray_transport_internet_SocketConfig_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.xray.transport.internet.Config.internal_static_xray_transport_internet_SocketConfig_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.xray.transport.internet.SocketConfig.class, com.xray.transport.internet.SocketConfig.Builder.class);
        }

        // Construct using com.xray.transport.internet.SocketConfig.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
        }

        @java.lang.Override
        public Builder clear() {
            super.clear();
            mark_ = 0;

            tfo_ = 0;

            tproxy_ = 0;

            receiveOriginalDestAddress_ = false;

            bindAddress_ = com.google.protobuf.ByteString.EMPTY;

            bindPort_ = 0;

            acceptProxyProtocol_ = false;

            domainStrategy_ = 0;

            dialerProxy_ = "";

            tcpKeepAliveInterval_ = 0;

            return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return com.xray.transport.internet.Config.internal_static_xray_transport_internet_SocketConfig_descriptor;
        }

        @java.lang.Override
        public com.xray.transport.internet.SocketConfig getDefaultInstanceForType() {
            return com.xray.transport.internet.SocketConfig.getDefaultInstance();
        }

        @java.lang.Override
        public com.xray.transport.internet.SocketConfig build() {
            com.xray.transport.internet.SocketConfig result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @java.lang.Override
        public com.xray.transport.internet.SocketConfig buildPartial() {
            com.xray.transport.internet.SocketConfig result = new com.xray.transport.internet.SocketConfig(this);
            result.mark_ = mark_;
            result.tfo_ = tfo_;
            result.tproxy_ = tproxy_;
            result.receiveOriginalDestAddress_ = receiveOriginalDestAddress_;
            result.bindAddress_ = bindAddress_;
            result.bindPort_ = bindPort_;
            result.acceptProxyProtocol_ = acceptProxyProtocol_;
            result.domainStrategy_ = domainStrategy_;
            result.dialerProxy_ = dialerProxy_;
            result.tcpKeepAliveInterval_ = tcpKeepAliveInterval_;
            onBuilt();
            return result;
        }

        @java.lang.Override
        public Builder clone() {
            return super.clone();
        }

        @java.lang.Override
        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
            return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
            return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.xray.transport.internet.SocketConfig) {
                return mergeFrom((com.xray.transport.internet.SocketConfig) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(com.xray.transport.internet.SocketConfig other) {
            if (other == com.xray.transport.internet.SocketConfig.getDefaultInstance()) return this;
            if (other.getMark() != 0) {
                setMark(other.getMark());
            }
            if (other.getTfo() != 0) {
                setTfo(other.getTfo());
            }
            if (other.tproxy_ != 0) {
                setTproxyValue(other.getTproxyValue());
            }
            if (other.getReceiveOriginalDestAddress() != false) {
                setReceiveOriginalDestAddress(other.getReceiveOriginalDestAddress());
            }
            if (other.getBindAddress() != com.google.protobuf.ByteString.EMPTY) {
                setBindAddress(other.getBindAddress());
            }
            if (other.getBindPort() != 0) {
                setBindPort(other.getBindPort());
            }
            if (other.getAcceptProxyProtocol() != false) {
                setAcceptProxyProtocol(other.getAcceptProxyProtocol());
            }
            if (other.domainStrategy_ != 0) {
                setDomainStrategyValue(other.getDomainStrategyValue());
            }
            if (!other.getDialerProxy().isEmpty()) {
                dialerProxy_ = other.dialerProxy_;
                onChanged();
            }
            if (other.getTcpKeepAliveInterval() != 0) {
                setTcpKeepAliveInterval(other.getTcpKeepAliveInterval());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
            return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            com.xray.transport.internet.SocketConfig parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (com.xray.transport.internet.SocketConfig) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }

        private int mark_;

        /**
         * <pre>
         * Mark of the connection. If non-zero, the value will be set to SO_MARK.
         * </pre>
         *
         * <code>int32 mark = 1;</code>
         *
         * @return The mark.
         */
        @java.lang.Override
        public int getMark() {
            return mark_;
        }

        /**
         * <pre>
         * Mark of the connection. If non-zero, the value will be set to SO_MARK.
         * </pre>
         *
         * <code>int32 mark = 1;</code>
         *
         * @param value The mark to set.
         * @return This builder for chaining.
         */
        public Builder setMark(int value) {

            mark_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Mark of the connection. If non-zero, the value will be set to SO_MARK.
         * </pre>
         *
         * <code>int32 mark = 1;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearMark() {

            mark_ = 0;
            onChanged();
            return this;
        }

        private int tfo_;

        /**
         * <pre>
         * TFO is the state of TFO settings.
         * </pre>
         *
         * <code>int32 tfo = 2;</code>
         *
         * @return The tfo.
         */
        @java.lang.Override
        public int getTfo() {
            return tfo_;
        }

        /**
         * <pre>
         * TFO is the state of TFO settings.
         * </pre>
         *
         * <code>int32 tfo = 2;</code>
         *
         * @param value The tfo to set.
         * @return This builder for chaining.
         */
        public Builder setTfo(int value) {

            tfo_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * TFO is the state of TFO settings.
         * </pre>
         *
         * <code>int32 tfo = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearTfo() {

            tfo_ = 0;
            onChanged();
            return this;
        }

        private int tproxy_ = 0;

        /**
         * <pre>
         * TProxy is for enabling TProxy socket option.
         * </pre>
         *
         * <code>.xray.transport.internet.SocketConfig.TProxyMode tproxy = 3;</code>
         *
         * @return The enum numeric value on the wire for tproxy.
         */
        @java.lang.Override
        public int getTproxyValue() {
            return tproxy_;
        }

        /**
         * <pre>
         * TProxy is for enabling TProxy socket option.
         * </pre>
         *
         * <code>.xray.transport.internet.SocketConfig.TProxyMode tproxy = 3;</code>
         *
         * @param value The enum numeric value on the wire for tproxy to set.
         * @return This builder for chaining.
         */
        public Builder setTproxyValue(int value) {

            tproxy_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * TProxy is for enabling TProxy socket option.
         * </pre>
         *
         * <code>.xray.transport.internet.SocketConfig.TProxyMode tproxy = 3;</code>
         *
         * @return The tproxy.
         */
        @java.lang.Override
        public com.xray.transport.internet.SocketConfig.TProxyMode getTproxy() {
            @SuppressWarnings("deprecation")
            com.xray.transport.internet.SocketConfig.TProxyMode result = com.xray.transport.internet.SocketConfig.TProxyMode.valueOf(tproxy_);
            return result == null ? com.xray.transport.internet.SocketConfig.TProxyMode.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * TProxy is for enabling TProxy socket option.
         * </pre>
         *
         * <code>.xray.transport.internet.SocketConfig.TProxyMode tproxy = 3;</code>
         *
         * @param value The tproxy to set.
         * @return This builder for chaining.
         */
        public Builder setTproxy(com.xray.transport.internet.SocketConfig.TProxyMode value) {
            if (value == null) {
                throw new NullPointerException();
            }

            tproxy_ = value.getNumber();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * TProxy is for enabling TProxy socket option.
         * </pre>
         *
         * <code>.xray.transport.internet.SocketConfig.TProxyMode tproxy = 3;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearTproxy() {

            tproxy_ = 0;
            onChanged();
            return this;
        }

        private boolean receiveOriginalDestAddress_;

        /**
         * <pre>
         * ReceiveOriginalDestAddress is for enabling IP_RECVORIGDSTADDR socket
         * option. This option is for UDP only.
         * </pre>
         *
         * <code>bool receive_original_dest_address = 4;</code>
         *
         * @return The receiveOriginalDestAddress.
         */
        @java.lang.Override
        public boolean getReceiveOriginalDestAddress() {
            return receiveOriginalDestAddress_;
        }

        /**
         * <pre>
         * ReceiveOriginalDestAddress is for enabling IP_RECVORIGDSTADDR socket
         * option. This option is for UDP only.
         * </pre>
         *
         * <code>bool receive_original_dest_address = 4;</code>
         *
         * @param value The receiveOriginalDestAddress to set.
         * @return This builder for chaining.
         */
        public Builder setReceiveOriginalDestAddress(boolean value) {

            receiveOriginalDestAddress_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * ReceiveOriginalDestAddress is for enabling IP_RECVORIGDSTADDR socket
         * option. This option is for UDP only.
         * </pre>
         *
         * <code>bool receive_original_dest_address = 4;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearReceiveOriginalDestAddress() {

            receiveOriginalDestAddress_ = false;
            onChanged();
            return this;
        }

        private com.google.protobuf.ByteString bindAddress_ = com.google.protobuf.ByteString.EMPTY;

        /**
         * <code>bytes bind_address = 5;</code>
         *
         * @return The bindAddress.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getBindAddress() {
            return bindAddress_;
        }

        /**
         * <code>bytes bind_address = 5;</code>
         *
         * @param value The bindAddress to set.
         * @return This builder for chaining.
         */
        public Builder setBindAddress(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            bindAddress_ = value;
            onChanged();
            return this;
        }

        /**
         * <code>bytes bind_address = 5;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearBindAddress() {

            bindAddress_ = getDefaultInstance().getBindAddress();
            onChanged();
            return this;
        }

        private int bindPort_;

        /**
         * <code>uint32 bind_port = 6;</code>
         *
         * @return The bindPort.
         */
        @java.lang.Override
        public int getBindPort() {
            return bindPort_;
        }

        /**
         * <code>uint32 bind_port = 6;</code>
         *
         * @param value The bindPort to set.
         * @return This builder for chaining.
         */
        public Builder setBindPort(int value) {

            bindPort_ = value;
            onChanged();
            return this;
        }

        /**
         * <code>uint32 bind_port = 6;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearBindPort() {

            bindPort_ = 0;
            onChanged();
            return this;
        }

        private boolean acceptProxyProtocol_;

        /**
         * <code>bool accept_proxy_protocol = 7;</code>
         *
         * @return The acceptProxyProtocol.
         */
        @java.lang.Override
        public boolean getAcceptProxyProtocol() {
            return acceptProxyProtocol_;
        }

        /**
         * <code>bool accept_proxy_protocol = 7;</code>
         *
         * @param value The acceptProxyProtocol to set.
         * @return This builder for chaining.
         */
        public Builder setAcceptProxyProtocol(boolean value) {

            acceptProxyProtocol_ = value;
            onChanged();
            return this;
        }

        /**
         * <code>bool accept_proxy_protocol = 7;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearAcceptProxyProtocol() {

            acceptProxyProtocol_ = false;
            onChanged();
            return this;
        }

        private int domainStrategy_ = 0;

        /**
         * <code>.xray.transport.internet.DomainStrategy domain_strategy = 8;</code>
         *
         * @return The enum numeric value on the wire for domainStrategy.
         */
        @java.lang.Override
        public int getDomainStrategyValue() {
            return domainStrategy_;
        }

        /**
         * <code>.xray.transport.internet.DomainStrategy domain_strategy = 8;</code>
         *
         * @param value The enum numeric value on the wire for domainStrategy to set.
         * @return This builder for chaining.
         */
        public Builder setDomainStrategyValue(int value) {

            domainStrategy_ = value;
            onChanged();
            return this;
        }

        /**
         * <code>.xray.transport.internet.DomainStrategy domain_strategy = 8;</code>
         *
         * @return The domainStrategy.
         */
        @java.lang.Override
        public com.xray.transport.internet.DomainStrategy getDomainStrategy() {
            @SuppressWarnings("deprecation")
            com.xray.transport.internet.DomainStrategy result = com.xray.transport.internet.DomainStrategy.valueOf(domainStrategy_);
            return result == null ? com.xray.transport.internet.DomainStrategy.UNRECOGNIZED : result;
        }

        /**
         * <code>.xray.transport.internet.DomainStrategy domain_strategy = 8;</code>
         *
         * @param value The domainStrategy to set.
         * @return This builder for chaining.
         */
        public Builder setDomainStrategy(com.xray.transport.internet.DomainStrategy value) {
            if (value == null) {
                throw new NullPointerException();
            }

            domainStrategy_ = value.getNumber();
            onChanged();
            return this;
        }

        /**
         * <code>.xray.transport.internet.DomainStrategy domain_strategy = 8;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearDomainStrategy() {

            domainStrategy_ = 0;
            onChanged();
            return this;
        }

        private java.lang.Object dialerProxy_ = "";

        /**
         * <code>string dialer_proxy = 9;</code>
         *
         * @return The dialerProxy.
         */
        public java.lang.String getDialerProxy() {
            java.lang.Object ref = dialerProxy_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                dialerProxy_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <code>string dialer_proxy = 9;</code>
         *
         * @return The bytes for dialerProxy.
         */
        public com.google.protobuf.ByteString
        getDialerProxyBytes() {
            java.lang.Object ref = dialerProxy_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                dialerProxy_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>string dialer_proxy = 9;</code>
         *
         * @param value The dialerProxy to set.
         * @return This builder for chaining.
         */
        public Builder setDialerProxy(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            dialerProxy_ = value;
            onChanged();
            return this;
        }

        /**
         * <code>string dialer_proxy = 9;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearDialerProxy() {

            dialerProxy_ = getDefaultInstance().getDialerProxy();
            onChanged();
            return this;
        }

        /**
         * <code>string dialer_proxy = 9;</code>
         *
         * @param value The bytes for dialerProxy to set.
         * @return This builder for chaining.
         */
        public Builder setDialerProxyBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            dialerProxy_ = value;
            onChanged();
            return this;
        }

        private int tcpKeepAliveInterval_;

        /**
         * <code>int32 tcp_keep_alive_interval = 10;</code>
         *
         * @return The tcpKeepAliveInterval.
         */
        @java.lang.Override
        public int getTcpKeepAliveInterval() {
            return tcpKeepAliveInterval_;
        }

        /**
         * <code>int32 tcp_keep_alive_interval = 10;</code>
         *
         * @param value The tcpKeepAliveInterval to set.
         * @return This builder for chaining.
         */
        public Builder setTcpKeepAliveInterval(int value) {

            tcpKeepAliveInterval_ = value;
            onChanged();
            return this;
        }

        /**
         * <code>int32 tcp_keep_alive_interval = 10;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearTcpKeepAliveInterval() {

            tcpKeepAliveInterval_ = 0;
            onChanged();
            return this;
        }

        @java.lang.Override
        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:xray.transport.internet.SocketConfig)
    }

    // @@protoc_insertion_point(class_scope:xray.transport.internet.SocketConfig)
    private static final com.xray.transport.internet.SocketConfig DEFAULT_INSTANCE;

    static {
        DEFAULT_INSTANCE = new com.xray.transport.internet.SocketConfig();
    }

    public static com.xray.transport.internet.SocketConfig getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SocketConfig>
            PARSER = new com.google.protobuf.AbstractParser<SocketConfig>() {
        @java.lang.Override
        public SocketConfig parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new SocketConfig(input, extensionRegistry);
        }
    };

    public static com.google.protobuf.Parser<SocketConfig> parser() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SocketConfig> getParserForType() {
        return PARSER;
    }

    @java.lang.Override
    public com.xray.transport.internet.SocketConfig getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

}

